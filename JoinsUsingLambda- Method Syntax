     
        List<Person> people = new List<Person>()
            {
                new Person("Tod", "Vachev", 1, 180, 26, Gender.Male),
                new Person("John", "Johnson", 2, 170, 21, Gender.Male),
                new Person("Anna", "Maria", 3, 150, 22, Gender.Female),
                new Person("Kyle", "Wilson", 4, 164, 29, Gender.Male),
                new Person("Anna", "Williams", 5, 164, 28, Gender.Male),
                new Person("Maria", "Ann", 6, 160, 19, Gender.Female),
                new Person("John", "Jones", 7, 160, 22, Gender.Female),
                new Person("Samba", "TheLion", 8, 175, 23, Gender.Male),
                new Person("Aaron", "Myers", 9, 182, 21, Gender.Male),
                new Person("Aby", "Wood", 10, 165, 20, Gender.Female),
                new Person("Maddie","Lewis",  11, 160, 19, Gender.Female),
                new Person("Lara", "Croft", 12, 162, 23, Gender.Female)
            };
      
      List<Buyer> buyers = new List<Buyer>()
            {
                new Buyer() { Name = "Johny", District = "Fantasy District", Age = 22},
                new Buyer() { Name = "Peter", District = "Scientists District", Age = 40},
                new Buyer() { Name = "Paul", District = "Fantasy District", Age = 30 },
                new Buyer() { Name = "Maria", District = "Scientists District", Age = 35 },
                new Buyer() { Name = "Joshua", District = "EarthIsFlat District", Age = 40 },
                new Buyer() { Name = "Sylvia", District = "Developers District", Age = 22 },
                new Buyer() { Name = "Rebecca", District = "Scientists District", Age = 30 },
                new Buyer() { Name = "Jaime", District = "Developers District", Age = 35 },
                new Buyer() { Name = "Pierce", District = "Fantasy District", Age = 40 },
                new Buyer() { Name = "sam ", District = "Great Science", Age = 40 }
            };
            List<Supplier> suppliers = new List<Supplier>()
            {
                new Supplier() { Name = "Harrison", District = "Fantasy District", Age = 22 },
                new Supplier() { Name = "Charles", District = "Developers District", Age = 40 },
                new Supplier() { Name = "Hailee", District = "Scientists District", Age = 35 },
                new Supplier() { Name = "Taylor", District = "EarthIsFlat District", Age = 30 },
                new Supplier() { Name = "Charliee", District = "EarthIsRound District", Age = 38 }
            };
     
     
     var innerjoin = suppliers.Join(buyers, s => s.District, b => b.District,
                (s, b) => new
                {
                    suppliersName = s.Name,
                    buyersNAme = b.Name,
                    s.District
                });

            foreach (var item in innerjoin)
            {
                Console.WriteLine(item.District + " " + item.District);
            }

            ////////////////////////Composite join -more than one key//////------------------------
            ///
            var CompositeJoin = suppliers.Join(buyers, s => new { s.District, s.Age }, b => new { b.District, b.Age }, (s, b) => new
            {
                SuppliersName = s.Name,
                s.District,
                BuyersName = b.Name,
                s.Age

            });

            //----------------------------------------Group JOIN------------------------

            var GroupJoin = suppliers.GroupJoin(buyers, s => s.District, b => b.District,
                (s, BuyersGroup) => new
                {
                    s.Name,
                    s.District,
                    buyers = BuyersGroup
                }
                );


            foreach (var item in GroupJoin)
            {
                Console.WriteLine(item.Name + " " + item.District);

                foreach (var item2 in item.buyers)
                {
                    Console.WriteLine(item2.Name);
                }
            }

            //---------------------------------------Inner Group Join------------


            var InnerGroupJoin = suppliers.GroupJoin(buyers, s => s.District, b => b.District, (s, BuyersGroup) => new
            {

                s.District,
                s.Name,
                s.Age,
                buyers = BuyersGroup.OrderBy(x => x.Age)
            });


            foreach (var item in InnerGroupJoin)
            {
                Console.WriteLine(item.Name + " " + item.District);

                foreach (var item2 in item.buyers)
                {
                    Console.WriteLine(item2.Name);
                }
            }

            Console.WriteLine(new string('-', 40));
            //--------------------------------------LEFT OUTER JOIN  returns Anonmous object-------------------------

            var LeftOuterJoin = suppliers.GroupJoin(buyers, s => s.District, b => b.District, (s, b) => new
            {

                s.Name,
                s.District,
                Buyers = b.OrderBy(x => x.Age)

            })
             .SelectMany(s => s.Buyers.DefaultIfEmpty(),
             (s, b) => new
             {
                 s.Name,
                 s.District,
                 BuyersName = b?.Name ?? "No name",
                 BuyersDistrict = b?.District ?? "no district"
             }
             );

            Console.WriteLine(new string('-', 40));

            foreach (var item in LeftOuterJoin)
            {
                Console.WriteLine(" " + item.BuyersName + " " + item.BuyersDistrict + " " + item.Name + " " + item.District);
            }



            var LEftOuterJoin2 = buyers.GroupJoin(suppliers, b => b.District, s => s.District, (b, s) => new
            {

                b.Name,
                b.Age,
                b.District,
                supplier = s


            })
                .SelectMany(b => b.supplier.DefaultIfEmpty(), (b, s) => new
                {
                    BuyersName = b.Name,
                    BuyersAge = b.Age,
                    BuyersDistrict = b.District,
                    SuppliersName = s?.Name ?? "Custom Suppliers Name",
                    SupplierDistrict = s?.District ?? "Custom Suppliers District",
                    SupplierAge = s?.Age ?? 90
                });


            foreach (var item in LEftOuterJoin2)
            {
                Console.WriteLine(" " + item.BuyersAge + " " + item.BuyersDistrict + " " + item.BuyersName + " " + item.SupplierAge + " " + item.SupplierDistrict + " " + item.SuppliersName);
            }

            //--------------------------------------LEFT OUTER JOIN  returns Buyers Object-------------------------

            var LeftOuterJoinBuyersObject = suppliers.GroupJoin(buyers, s => s.District, b => b.District, (s, buyersObject) => new
            {
                s.Name,
                s.Age,
                s.District,
                Buyers= buyersObject.DefaultIfEmpty(new Buyer() { 
                Name="no name",
                District="No District",
                Age=12
                })
            });

            foreach (var item in LeftOuterJoinBuyersObject)
            {
                Console.WriteLine(item.Name + " " + item.District);
                foreach (var item2 in item.Buyers)
                {
                    Console.WriteLine(item2.District+ " "  + item2.Age + " " + item2.Name);
                }
            }
            
            // end of main method and main class
            
            
    internal class Supplier
    {
        public string Name { get; set; }
        public string District { get; set; }
        public int Age { get; set; }
    }

    internal class Buyer
    {
        public string Name { get; set; }
        public string District { get; set; }
        public int Age { get; set; }
    }
    internal class Person
    {
        private string firstName;
        private string lastName;
        private int id;
        private int height;
        private int age;

        private Gender gender;

        public string FirstName
        {
            get
            {
                return this.firstName;
            }
            set
            {
                this.firstName = value;
            }
        }

        public string LastName
        {
            get
            {
                return this.lastName;
            }
            set
            {
                this.lastName = value;
            }
        }

        public int ID
        {
            get
            {
                return this.id;
            }
            set
            {
                this.id = value;
            }
        }

        public int Height
        {
            get
            {
                return this.height;
            }
            set
            {
                this.height = value;
            }
        }

        public int Age
        {
            get
            {
                return this.age;
            }
            set
            {
                this.age = value;
            }
        }

        public Gender Gender
        {
            get
            {
                return this.gender;
            }
            set
            {
                this.gender = value;
            }
        }

        public Person(string firstName, string lastName, int id, int height, int age, Gender gender)
        {
            this.firstName = firstName;
            this.lastName = lastName;
            this.id = id;
            this.Height = height;
            this.Age = age;
            this.Gender = gender;
        }
    }

    internal enum Gender
    {
        Male,
        Female
    }
            
